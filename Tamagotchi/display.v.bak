`timescale 1ns / 1ps
module display( 
    input [7:0] numA,
	 input [7:0] numB,
	 
    input clk,
	 input rst,
	 
	 output [0:6] sseg,
    output reg [7:0] an,
	 
	 output led
    );


reg [7:0]bcd=0;

BCDtoSSeg bcdtosseg(.BCD(bcd), .SSeg(sseg));

reg [26:0] cfreq=0;
wire enable;

// Divisor de frecuecia
assign enable = cfreq[16];

assign led =enable;
always @(posedge clk) begin
  if(rst==0) begin
		cfreq <= 0;
	end else begin
		cfreq <=cfreq+1;
	end
end

reg [2:0] count =0;
always @(posedge enable) begin
		if(rst==0) begin
			count<= 0;
			an<=9'b111111111; 
		end else begin 
			count<= count+1;
			an<=9'b111111111; 
			case (count) 
				2'h0: begin bcd <= (numB % 10); an<=9'b111111110; end
				2'h1: begin bcd <= ((numB / 10) % 10); an<=9'b111111101; end 
				2'h2: begin bcd <= ((numB / 100) % 10); an<=9'b111111011; end 
				2'h3: begin bcd <= (11); an<=9'b111110111; end //B
				
				3'h4: begin bcd <= (numA % 10); an<=9'b111101111; end
				3'h5: begin bcd <= ((numA / 10) % 10); an<=9'b111011111; end 
				3'h6: begin bcd <= ((numA / 100) % 10); an<=9'b110111111; end 
				3'h7: begin bcd <= (10); an<=9'b101111111; end //A
			endcase
		end
end
endmodule